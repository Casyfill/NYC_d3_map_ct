{
  "$schema": "https://vega.github.io/schema/vega/v3.0.json",
  "autosize": {
    "resize": true,
    "type": "fit"
  },
  "config": {
    "legend": {
      "gradientThickness": 50,
      "gradientLength": 300
    }
  },
  "data": [
    {
      "format": {
        "type": "csv"
      },
      "name": "data",
      "url": "data/nyc_new/tooltips.csv"
    },
    {
      "format": {
        "feature": "taxi_zones",
        "type": "topojson"
      },
      "name": "zones",
      "transform": [
        {
          "fields": [
            "properties.OBJECTID"
          ],
          "from": "data",
          "key": "OBJECTID",
          "type": "lookup",
          "values": [
            "work",
            "live"

          ]
        }
      ],
      "url": "data/nyc/taxi_zones.topojson.json"
    },
    {
      "format": {
        "type": "csv"
      },
      "name": "anomals",
      "transform": [
        {
          "as": "OBJECTID",
          "expr": "toNumber(datum.OBJECTID)",
          "type": "formula"
        },
        {
          "as": "time",
          "expr": "toNumber(datum.time)",
          "type": "formula"
        },
        {
          "as": "value",
          "expr": "toNumber(datum.value)",
          "type": "formula"
        }
      ],
      "url": "data/nyc_new/anomalies_nyc.csv"
    },
    {
      "name": "anomals_filtered",
      "source": "anomals",
      "transform": [
        {
          "expr": "datum.time === time",
          "type": "filter"
        }
      ]
    },
    {
      "name": "merged_zones",
      "source": "zones",
      "transform": [
        {
          "fields": [
            "properties.OBJECTID"
          ],
          "from": "anomals_filtered",
          "key": "OBJECTID",
          "type": "lookup",
          "values": [
            "time",
            "value",
            "MobilityIn",
            "MobilityOut",
            "SNODA"
          ]
        }
      ]
    },
    {
      "name": "zones_no_anomalies",
      "source": "merged_zones",
      "transform": [
        {
          "expr": "datum.value === null",
          "type": "filter"
        }
      ]
    },
    {
      "name": "zones_anomalies",
      "source": "merged_zones",
      "transform": [
        {
          "expr": "datum.value != null",
          "type": "filter"
        }
      ]
    },
    {
      "name": "significant_dates",
      "url": "data/nyc_new/dates.csv",
      "format": {
        "type": "csv"
      }
    }
  ],
  "height": 700,
  "marks": [
    {
      "encode": {
        "update": {
          "height": {
            "signal": "height - 75"
          },
          "width": {
            "signal": "width"
          }
        }
      },
      "legends": [
        {
          "fill": "color",
          "orient": "top-left",
          "title": "Anomality index",
          "type": "gradient"
        }
      ],
      "marks": [
        {
          "encode": {
            "enter": {
              "stroke": {
                "value": "#636b6d"
              },
              "tooltip": {
                "signal": "{'title':datum.properties.zone, 'work here':datum.work, 'live here':datum.live}"
              }
            },
            "hover": {
              "strokeWidth": {
                "value": 3
              },
              "zindex": {
                "value": 1
              }
            },
            "update": {
              "fill": {
                "value": "lightgrey"
              },
              "strokeWidth": {
                "value": 0.5
              },
              "zindex": {
                "value": 0
              }
            }
          },
          "from": {
            "data": "zones_no_anomalies"
          },
          "name": "grey_marks",
          "style": [
            "geoshape"
          ],
          "transform": [
            {
              "projection": "projection",
              "type": "geoshape"
            }
          ],
          "type": "shape"
        },
        {
          "encode": {
            "enter": {
              "tooltip": {
                "signal": "{'title':datum.properties.zone, 'value':format(datum.value, '.4f'), 'work here':datum.work, 'live here':datum.live, 'Inward Mobility':format(datum.MobilityIn, ',.0f'), 'Outward Mobilty':format(datum.MobilityOut, ',.0f'), 'SNODA': format(datum.SNODA, '.3f')  }"
              }
            },
            "hover": {
              "stroke": {
                "value": "#032765"
              },
              "strokeWidth": {
                "value": 1
              },
              "zindex": {
                "value": 1
              }
            },
            "update": {
              "fill": {
                "field": "value",
                "scale": "color"
              },
              "stroke": {
                "value": "black"
              },
              "strokeWidth": {
                "value": 0.5
              },
              "zindex": {
                "value": 0.1
              }
            }
          },
          "from": {
            "data": "zones_anomalies"
          },
          "name": "tzones_marks",
          "style": [
            "geoshape"
          ],
          "transform": [
            {
              "projection": "projection",
              "type": "geoshape"
            }
          ],
          "type": "shape"
        }
      ],
      "name": "map",
      "type": "group",
      "projections": [
        {
          "center": [
            -73.99,
            42
          ],
          "fit": {
            "signal": "[data('zones'), data('zones')]"
          },
          "name": "projection",
          "size": {
            "signal": "[width-100, height-100]"
          },
          "type": "mercator"
        }
      ]
    },
    {
      "type": "group",
      "name": "timeline",
      "encode": {
        "enter": {
          "clip": true,
          "fill": {"value":"#636b6d"}
        },
        "update": {
          "x": {
            "value": 0
          },
          "height": {
            "value": 50
          },
          "y": {
            "signal": "height - 90"
          },
          "width": {
            "signal": "width"
          }
        }
      },
      "axes": [
        {
          "orient": "bottom",
          "scale": "realTimeScale",
          "domain": true,
          "labelPadding": 10,
          "ticks": true,
          "tickColor": "black",
          "tickOffset": 0,
          "tickSize": 10,
          "offset": -20,
          "title": {"signal": "time_formatted"},
          "tickCount": "month",
          "encode": {
            "ticks": {
              "update": {
                "stroke": {"value": "black"}
              }  
            },
            "domain": {
              "update": {
                "stroke": {"value": "black"}
              }  
            },
            "title": {
              "update": {
                "align": {"value": "right"},
                "x": {"signal": "width -90"},
                "y": {"value": -40},
                "fontSize": {"value": 20}
              }
            }
          }
        }
      ],
      "data": [
        {
          "name": "timeline",
          "source": "anomals",
          "transform": [
            {
              "type": "aggregate",
              "groupby": [
                "time"
              ],
              "fields": [
                "value"
              ],
              "ops": [
                "min"
              ]
            }
          ]
        }
      ],
      "marks": [
        {"type": "symbol",
         "name": "previous",
         "encode": {
          "enter": {
            "y": {"value":0},
            "size": {"value":300},
            "shape": {"value": "triangle-left"}
          },
          "update": {
            "x": {"signal":"width - 70"},
            "fill": {"value": "black"}
          },
          "hover": {
            "fill": {"value": "lightgrey"}
          }
         }},
         {"type": "symbol",
         "name": "next",
         "encode": {
          "enter": {
            "y": {"value":0},
            "size": {"value":300},
            "shape": {"value": "triangle-right"}
          },
          "update": {
            "x": {"signal":"width - 45"},
            "fill": {"value": "black"}
          },
          "hover": {
            "fill": {"value": "lightgrey"}
          }
         }},
        {
          "type": "rule",
          "name": "significant",
          "from": {"data": "significant_dates"},
          "encode": {
            "enter": {
              "x" : { "scale": "timeScale", "field": "time"},
              "y":   { "scale": "sd_tick_height_lower", "field": "stations"},
              "y2": { "scale": "sd_tick_height_highter", "field": "stations"},
              "tooltip": {
                "signal": "{'title':datum.description, 'date':datum.datetime  }"
              },
              "zindex": {"value": 0.5}
            },
            "update": {
              "stroke": [{
                "test": "length(datum.description) > 2",
                "value": "orange"
              }, {"value": "darkred"}],
              "strokeWidth": {"value": 2}
            },
            "hover": {
              "stroke": {"value": "lightgrey"},
              "strokeWidth": {"value": 4}
            }
          }
        },
        {
          "type": "symbol",
          "name": "timeSelect",
          "encode": {
            "enter": {
              "zindex": {
                "value": 1
              },
              "shape": {"value": "circle"},
              "y": {
                "value": 30
              },
              "size": { "value": 110},
              "stroke": {"value": "black"}
            },
            "update": {
              "x": {
                "signal": "time",
                "scale": "timeScale"
              },
              
              "fill": {
                "value": "black"
              }
              
            },
            "hover": {
              "fill": {
                "value": "lightgrey"
              }
            }
          }
        }
      ]
    }
  ],
  "padding": {
    "bottom": 5,
    "left": 5,
    "right": 5,
    "top": 5
  },
  "signals": [
    {"name": "datetime",
      "forse": true,
     "bind": {
      "input": "select",
      "options": [
        "11/09/16 06:00",
        "11/11/16 06:00",
        "11/11/16 12:00",
        "11/11/16 21:00",
        "11/12/16 21:00",
        "11/23/16 15:00",
        "11/23/16 18:00",
        "11/23/16 21:00",
        "11/26/16 15:00",
        "12/30/16 15:00",
        "12/31/16 15:00",
        "07/03/17 18:00",
        "07/07/17 15:00"
      ],
      "element": "#interface",
      "name": "datetime"
     }
    },
    {
      "name": "parseDate",
      "update": "round((toDate(datetime + ' GMT') - 1451606400000) / (24 * 3600 * 1000))"
    },
    {
      "name": "numericDomain",
      "value": [244, 730]
    },
    {
      "name": "time_on_hover",
      "on": [
        {
          "events": "@significant:mouseover",
          "update": "toNumber(item().datum.time)"
        }
      ]
    },
    {
      "name": "timeString_on_hover",
      "on": [
        {
          "events": "@significant:mouseover",
          "update": "item().datum.datetime"
        }
      ]
    },
    {
      "name": "time_formatted",
      "update": "utcFormat(timer, '%A %b %d %Y')"
    },

    {"name": "timer",
     "update": "time * 24 * 3600 * 1000 + 1451606400000"
    },

    {
      "name":"currentObject",
      "on": [
        {
          "events": "@significant:click",
          "update": "toNumber(item().datum.time)"
        }
      ]
    },
    
    {
      "name": "time",
      "value": 244,
      "on": [
        {
          "events": "[@timeSelect:mousedown, window:mouseup] > window:mousemove!",
          "update": "clamp(round(invert('timeScale', x())), numericDomain[0], numericDomain[1])"
        },
        {
        "events": "@timeline:wheel, @timeSelect:wheel",
        "update": "clamp(time + event.deltaY, numericDomain[0], numericDomain[1])",
        "throttle": 200
        },
        {
          "events": "@significant:click",
          "update": "toNumber(item().datum.time)"
        },
        {
         "events": "@next:click",
         "update": "clamp(time + 1, numericDomain[0], numericDomain[1])"
        },
        {
         "events": "@previous:click",
         "update": "clamp(time - 1, numericDomain[0], numericDomain[1])"
        },
        {
          "events": {"source":"window", "type":"keydown", "filter": ["event.key == 'ArrowLeft'"]},
          "update": "clamp(time - 1, numericDomain[0], numericDomain[1])"
        },
        {
          "events": {"source":"window", "type":"keydown", "filter": ["event.key == 'ArrowRight'"]},
          "update": "clamp(time + 1, numericDomain[0], numericDomain[1])"
        },
        {
          "events": {"signal": "datetime"},
          "force": true,
          "update": "round((toDate(datetime + ' GMT') - 1451606400000) / (24 * 3600 * 1000))"
        }

      ]
    },
    {
      "name": "keyLogger",
      "value": 0,
      "on": [
        {
        "events": "keypress",
        "update": "keyLogger + 1"
        }
      ]
    }
  ],
  "width": 800,
  "scales": [
    { 
      "clamp": true,
      "domain": {"data":"anomals", "field":"value"},
      "name": "color",
      "nice": true,
      "range": [
        "orange",
        "darkred"
      ],
      "type": "linear",
      "zero": false
    },
    {
        "name": "sd_tick_height_lower",
        "domain": {"data": "significant_dates", "field": "stations"},
        "range": [40, 60],
        "type": "linear"
      },
      {
        "name": "sd_tick_height_highter",
        "domain": {"data": "significant_dates", "field": "stations"},
        "range": [20, 0],
        "type": "linear"
      },
        {
          "domain": {"signal": "numericDomain"},
          "name": "timeScale",
          "clamp": true,
          "range": {
            "signal": "[35, width - 35]"
          },
          "type": "linear",
          "nice": false,
          "zero": false
        },
        {
          "name": "realTimeScale",
          "clamp": true,
          "range": {
            "signal": "[35, width - 35]"
          },
          "type": "time",
          "domain": { "signal": "[datetime(2016, 8,0, 0), datetime(2018,0,1, 0)]"}
        }
  ]
}